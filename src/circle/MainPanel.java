/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package circle;

import java.awt.BorderLayout;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JOptionPane;
import plot.PlotProxy;

/**
 *
 * @author grzes
 */
public class MainPanel extends javax.swing.JPanel
{

    private PropertyChangeSupport pcs;
    private Parameters params;
    
    /**
     * Creates new form MainPanel
     */
    public MainPanel()
    {
        initComponents();
        pcs = new PropertyChangeSupport(this);
        plotContainer.setLayout(new BorderLayout());
        plotContainer.add(PlotProxy.getPanel());
        try {
            params = new Parameters(Math.pow(2, -4), 2*Math.PI);
        } catch (InvalidParamsException ex) {}
        calcLabel.setVisible(false);
    }

    public Parameters getParams()
    {
        return params;
    }
    
    private boolean setParams()
    {
        double h = (Double) step.getValue();
        double t = 2 * (Integer) circles.getValue() * Math.PI;
        try {
            params = new Parameters(h, t);
        } catch (InvalidParamsException ex) {
            JOptionPane.showMessageDialog(this, "Could not draw due to the following error:\n "
                                                    + ex.getMessage(),
                                                "Drawing error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    public Method getMethod()
    {
        String name = methods.getSelectedItem().toString();
        if (name.equalsIgnoreCase("Explicit Euler"))
            return new Euler();
        else if  (name.equalsIgnoreCase("Backward Euler"))
            return new BackwardEuler();
        else if  (name.equalsIgnoreCase("Improved Euler"))
            return new ImprovedEuler();
        else if  (name.equalsIgnoreCase("Midpoint Euler"))
            return new MidpointEuler();
        else if  (name.equalsIgnoreCase("Incorrect Euler"))
            return new IncorrectEuler();
        else if (name.equalsIgnoreCase("Trapezoidal Rule"))
            return new TrapezoidalRule();
        else if (name.equalsIgnoreCase("Runge-Kutta 4"))
            return new RungeKutta4();
        else
            throw new RuntimeException("Method \"" + name + "\" not known.");
    }

    @Override
    public void removePropertyChangeListener(PropertyChangeListener listener)
    {
        pcs.removePropertyChangeListener(listener);
    }

    @Override
    public void addPropertyChangeListener(PropertyChangeListener listener)
    {
        pcs.addPropertyChangeListener(listener);
    }

    public void block(boolean b)
    {
        draw.setEnabled(!b);
        calcLabel.setVisible(b);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plotContainer = new javax.swing.JPanel();
        paramsContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        step = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        circles = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        methods = new javax.swing.JComboBox();
        draw = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        calcLabel = new javax.swing.JLabel();

        plotContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout plotContainerLayout = new javax.swing.GroupLayout(plotContainer);
        plotContainer.setLayout(plotContainerLayout);
        plotContainerLayout.setHorizontalGroup(
            plotContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
        );
        plotContainerLayout.setVerticalGroup(
            plotContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        paramsContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("h");

        step.setModel(new javax.swing.SpinnerNumberModel(0.05d, 1.0E-4d, 5.0d, 0.001d));

        jLabel2.setText("Step size:");

        jLabel3.setText("N");

        circles.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel4.setText("Method:");

        methods.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Explicit Euler", "Incorrect Euler", "Backward Euler", "Improved Euler", "Midpoint Euler", "Trapezoidal Rule", "Runge-Kutta 4" }));

        draw.setText("Draw!");
        draw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawActionPerformed(evt);
            }
        });

        jLabel5.setText("Number of circles:");

        calcLabel.setForeground(new java.awt.Color(255, 0, 0));
        calcLabel.setText("Calculating...");

        javax.swing.GroupLayout paramsContainerLayout = new javax.swing.GroupLayout(paramsContainer);
        paramsContainer.setLayout(paramsContainerLayout);
        paramsContainerLayout.setHorizontalGroup(
            paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paramsContainerLayout.createSequentialGroup()
                .addGroup(paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(step)
                    .addComponent(circles)))
            .addComponent(draw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(methods, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(paramsContainerLayout.createSequentialGroup()
                .addGroup(paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(paramsContainerLayout.createSequentialGroup()
                .addComponent(calcLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        paramsContainerLayout.setVerticalGroup(
            paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paramsContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(step, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(19, 19, 19)
                .addGroup(paramsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(circles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(methods, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(draw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calcLabel)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(plotContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paramsContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plotContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(paramsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drawActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_drawActionPerformed
    {//GEN-HEADEREND:event_drawActionPerformed
        if (setParams())
            pcs.firePropertyChange("DrawClicked", null, null);
    }//GEN-LAST:event_drawActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calcLabel;
    private javax.swing.JSpinner circles;
    private javax.swing.JButton draw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox methods;
    private javax.swing.JPanel paramsContainer;
    private javax.swing.JPanel plotContainer;
    private javax.swing.JSpinner step;
    // End of variables declaration//GEN-END:variables

}
